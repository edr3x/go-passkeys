// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: user.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const getUserByEmailOrId = `-- name: GetUserByEmailOrId :one
SELECT
    u.id,
    u.first_name,
    u.last_name,
    u.email
FROM
    users u
WHERE
    u.email = $1
    OR u.id = $2
`

type GetUserByEmailOrIdParams struct {
	Email string    `json:"email"`
	ID    uuid.UUID `json:"id"`
}

type GetUserByEmailOrIdRow struct {
	ID        uuid.UUID `json:"id"`
	FirstName string    `json:"first_name"`
	LastName  string    `json:"last_name"`
	Email     string    `json:"email"`
}

func (q *Queries) GetUserByEmailOrId(ctx context.Context, arg GetUserByEmailOrIdParams) (GetUserByEmailOrIdRow, error) {
	row := q.db.QueryRow(ctx, getUserByEmailOrId, arg.Email, arg.ID)
	var i GetUserByEmailOrIdRow
	err := row.Scan(
		&i.ID,
		&i.FirstName,
		&i.LastName,
		&i.Email,
	)
	return i, err
}
